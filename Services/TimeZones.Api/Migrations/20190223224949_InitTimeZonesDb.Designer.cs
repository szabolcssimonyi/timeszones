// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TimeZones.Domain.Contexts;

namespace TimeZones.Api.Migrations
{
    [DbContext(typeof(TimeZonesDbContext))]
    [Migration("20190223224949_InitTimeZonesDb")]
    partial class InitTimeZonesDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TimeZones.Extensibility.Entities.TimeZoneEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Abbreviation");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<int>("Offset");

                    b.HasKey("Id");

                    b.ToTable("TimeZones");
                });

            modelBuilder.Entity("TimeZones.Extensibility.Entities.UserTimeZoneEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("TimeZoneEntityId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TimeZoneEntityId");

                    b.ToTable("UserTimeZones");
                });

            modelBuilder.Entity("TimeZones.Extensibility.Entities.UserTimeZoneEntity", b =>
                {
                    b.HasOne("TimeZones.Extensibility.Entities.TimeZoneEntity", "TimeZoneEntity")
                        .WithMany()
                        .HasForeignKey("TimeZoneEntityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
